# SwiftLint Configuration for ClickIt
# Based on macos-auto-clicker-main with adaptations for our project structure

# Paths to include/exclude
included:
  - Sources/

excluded:
  - .build/
  - dist/
  - scripts/
  - docs/
  - scratchpads/
  - Tests/

# Target deployment platform
deployment_target:
  macOS_deployment_target: "15.0"

# Analyzer rules (require more computation but catch logical issues)
analyzer_rules:
  - capture_variable
  - typesafe_array_init
  - unused_declaration
  - unused_import

# Disabled rules (we may enable some of these later)
disabled_rules:
  - todo # Allow TODO comments during development
  - trailing_whitespace # Auto-fixable by editor
  - multiple_closures_with_trailing_closure # Sometimes needed for SwiftUI

# Rules that should cause warnings (not errors)
warning_only_rules:
  - line_length
  - function_body_length
  - type_body_length
  - cyclomatic_complexity

# Opt-in rules (not enabled by default but useful)
opt_in_rules:
  - anyobject_protocol
  - array_init
  - attributes
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - colon
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - discouraged_object_literal
  - empty_collection_literal
  - empty_count
  - empty_string
  - enum_case_associated_values_count
  - explicit_init
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - first_where
  - flatmap_over_map_reduce
  - force_unwrapping
  - function_default_parameter_at_end
  - ibinspectable_in_extension
  - identical_operands
  - implicit_return
  - joined_default_parameter
  - last_where
  - legacy_random
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - multiline_parameters_brackets
  - operator_usage_whitespace
  - overridden_super_call
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - prefer_zero_over_explicit_init
  - prefixed_toplevel_constant
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - required_enum_case
  - single_test_class
  - sorted_first_last
  - static_operator
  - strong_iboutlet
  - toggle_bool
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - untyped_error_in_catch
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - xct_specific_matcher
  - yoda_condition

# Rule configurations
line_length:
  warning: 120
  error: 200
  ignores_urls: true
  ignores_function_declarations: true
  ignores_comments: true

function_body_length:
  warning: 60
  error: 100

type_body_length:
  warning: 300
  error: 400

file_length:
  warning: 400
  error: 1000
  ignore_comment_only_lines: true

cyclomatic_complexity:
  warning: 10
  error: 20

nesting:
  type_level:
    warning: 3
    error: 6
  statement_level:
    warning: 5
    error: 10

# Custom rules specific to ClickIt/SwiftUI development
custom_rules:
  # Ensure @State properties in SwiftUI views are private
  swiftui_state_private:
    name: "SwiftUI @State should be private"
    regex: '^(\s*)@State\s+(?!private\s)(.*)'
    match_kinds:
      - argument
      - attribute.builtin
      - attribute.name
      - buildconfig.keyword
      - comment
      - comment.mark
      - comment.url
      - doccomment
      - doccomment.field
      - identifier
      - keyword
      - number
      - objectliteral
      - parameter
      - placeholder
      - string
      - string_interpolation_anchor
      - typeidentifier
    message: "@State properties should be private to encapsulate SwiftUI view state"
    severity: warning

  # Ensure classes that can be final are final
  final_class:
    name: "Classes should be final when possible"
    regex: '^(\s*)class\s+(?!.*:\s*ObservableObject)(?!.*:\s*.*Protocol)([A-Z][a-zA-Z0-9]*)'
    match_kinds: [keyword]
    message: "Classes should be final when they don't need to be subclassed"
    severity: warning

  # Discourage force unwrapping in production code
  discourage_force_unwrap:
    name: "Avoid force unwrapping"
    regex: '(\!\s*$|\!\s*[,;)}\]])'
    message: "Consider using optional binding or nil coalescing instead of force unwrapping"
    severity: warning

  # Ensure proper spacing around operators
  operator_whitespace:
    name: "Operators should have whitespace"
    regex: '[a-zA-Z0-9][+\-*/%=<>!&|^~]+[a-zA-Z0-9]'
    message: "Operators should be surrounded by whitespace"
    severity: warning

# File header configuration
file_header:
  required_pattern: |
                    \/\/
                    \/\/ .*\.swift
                    \/\/ ClickIt
                    \/\/
                    \/\/ Created.*
                    \/\/ Copyright.*
  forbidden_pattern: |
                     \/\/
                     \/\/ .*\.swift
                     \/\/ .*
                     \/\/
                     \/\/ Created.*
                     \/\/ Auto-generated.*

# Identifier naming rules
identifier_name:
  min_length:
    warning: 1
    error: 0
  max_length:
    warning: 50
    error: 60
  excluded:
    - id
    - x
    - y
    - i
    - j
    - k
    - dx
    - dy
    - db
    - ui
    - os

type_name:
  min_length:
    warning: 3
    error: 0
  max_length:
    warning: 50
    error: 60

# SwiftUI-specific configurations
modifier_order:
  preferred_modifier_order:
    - acl
    - setterACL
    - override
    - dynamic
    - mutators
    - lazy
    - final
    - required
    - convenience
    - typeMethods
    - owned

# Performance-related rules
collection_alignment:
  align_colons: true

# Allow longer parameter lists for SwiftUI initializers
function_parameter_count:
  warning: 8
  error: 12

# Reporter configuration (useful for CI)
reporter: "xcode" # Formats output for Xcode integration